plugins {
  id "java"
  id "maven"
  id "scala"
  id "com.github.maiflai.scalatest" version "0.18"
  id "com.github.johnrengelman.shadow" version "2.0.1"
}

apply plugin: "java"
apply plugin: "scala"
apply plugin: "application"
apply plugin: "com.github.johnrengelman.shadow"

group = "space.maizy"
version = "0.0.1-SNAPSHOT"
mainClassName = "space.maizy.mozzarella.Launcher"
sourceCompatibility = 1.8

ext {
  scalaMajorVersion = "2.12"
  scalaMinorVersion = "4"
  scalaVersion = "${scalaMajorVersion}.${scalaMinorVersion}"
}

repositories {
    mavenCentral()
}

dependencies {

  compile "org.scala-lang:scala-library:${scalaVersion}"
  compile "org.scala-lang:scala-reflect:${scalaVersion}"
  compile "ch.qos.logback:logback-classic:1.2.3"
  compile "com.typesafe.scala-logging:scala-logging_${scalaMajorVersion}:3.7.2"
  compile "org.dispatchhttp:dispatch-core_${scalaMajorVersion}:0.14.0"
  compile "org.typelevel:cats-core_${scalaMajorVersion}:1.1.0"
  compile "org.json4s:json4s-native_${scalaMajorVersion}:3.5.4"
  testCompile "org.scalatest:scalatest_${scalaMajorVersion}:3.0.4"
  testRuntime "org.pegdown:pegdown:1.4.2"
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.2"
    distributionType = "all"
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = [
        "-Xlint:_",
        "-feature",
        "-Xfatal-warnings",
        "-Ywarn-dead-code",
        "-Ywarn-inaccessible",
        "-Ywarn-infer-any",
        "-Ywarn-nullary-override",
        "-Ywarn-nullary-unit",
        "-Ywarn-numeric-widen"
    ]
}


jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

shadowJar {
    classifier 'shadow'
}
